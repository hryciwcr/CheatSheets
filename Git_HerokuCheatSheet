
Create a git Repository

1. Navigate to the git repo you would like to turn into a git repository

2. run 'git init'
>> git init

3. run 'git status' to see which files need to be commited
>> git status

4. run 'git add'
>>
options
>> git add . # add whole directory
>> git add * # add all files
>> git add examplefile.py # add only the examplefile.py

Note: if you want to remove a file that you committed
>> git rm --cached examplefile.py # remove only examplefile.py
>> git rm --cached * # remove all cached files

5. run 'git commit' to commit the file
>> git commit -m "Committing first revision of GitHubCheatsheet"

6. Create a new repository in Github on www.github.com.
Repository created is called:
hryciwcr/CheatSheets

7. Push the repository that you created from the command line
Add 'origin' to the specified url
>> git remote add origin https://github.com/hryciwcr/CheatSheets.git
push mastet branch of 'origin'
>> git push -u origin master


BRANCHING
------------
1. if on master branch, create and checkout new branch
>> git checkout -b example_branch

2. run 'git branch' to see that you are on the new branch
>> git branch

3. modify your file and save it

4. add the file to be commited 'git add'
>> git add *

5. commit the file
>> git commit -m "Attempting to commit the example_branch"

6. push the branch to the master
>> git push origin example_branch

7. someone can approve your branch and merge it

8. once your branch is merged, the user who merged it should delete it in github

9. After it is deleted, switch off of it in your command line
>> git checkout master

10. confirm you are off it with 'git branch'
>> git branch

11. Delete it with 
>> git branch -d example_branch

HOW TO PULL A FILE AND WORK FROM IT
--------------------------------------
1. use 'git clone https://github.com/hryciwcr/path/to/repo.git' to copy the repo to your 
>> git clone https://github.com/hryciwcr/CheatSheets.git

2. cd into your directory
>> cd directory_name

3. once you have cloned it, create a new branch to do your work in
>> git checkout -b example_working_branch
Note: if you do not do this, your changes will be commited to the master branch. This is bad

Login to Heroku databade from command line
-----------------------------------------
>>heroku pg:psql